#---------------------------------------------------------------
#
# execution:
#       /control/execute visu.mac
#
#---------------------------------------------------------------
# verbose levels

/run/initialize
/run/verbose      0
/event/verbose    0
/tracking/verbose 1

#---------------------------------------------------------------
#   Input Files
#---------------------------------------------------------------
#/input/Open_B MAGNETIC_FIELD_data/woods_field.txt
/input/Open_SRIM SRIM_data/AlMylar_2021_32Ar.txt
/input/Open_CRADLE CRADLE_data/SAMPLE.root

#---------------------------------------------------------------
#   Simulation Parameters
#---------------------------------------------------------------
/Magnetic_Field 4 T
/Detector_thickness 10 cm
/Detector_radius 1. cm
/Detector_distance 1.05 cm

#---------------------------------------------------------------
#   Systematic Variables
#---------------------------------------------------------------
/Beam_Size 2 mm 300 um
/Beam_Position 0 cm 0 cm

/Catcher_Position_z 0 mm
/Catcher_Position catcher2 0 deg     position:[source / catcher2 / catcher1] #delta angle(degree)
/Catcher_Thickness 100 700 0 nm     thickness : Al, Mylar Al (0 delete it)

#---------------------------------------------------------------
#   Generate Events
#---------------------------------------------------------------
/run/printProgress 200
/output test.root
#
#
#---------------------------------------------------------------
#   set visualisation and scene
#
## Federica start
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#/vis/open VRML2FILE

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh true
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointThetaPhi -135. -45.
#
# Specify zoom value:
/vis/viewer/zoom 10
#
# Specify style (surface or wireframe):
/vis/viewer/set/style wireframe
#/vis/ogl/set/transparency True
#
# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 10 cm
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 15
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
/vis/scene/add/hits
#
# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma
#/vis/filtering/trajectories/particleFilter-0/add e-
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/set e- red
/vis/modeling/trajectories/drawByParticleID-0/set e+ blue
/vis/modeling/trajectories/drawByParticleID-0/set nu_e white
/vis/modeling/trajectories/drawByParticleID-0/set anti_nu_e white
/vis/modeling/trajectories/drawByParticleID-0/set geantino white
/vis/modeling/trajectories/drawByParticleID-0/set gamma green
/vis/modeling/trajectories/drawByParticleID-0/set alpha yellow
/vis/modeling/trajectories/drawByParticleID-0/set GenericIon grey
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/enable
/vis/viewer/flush
/vis/viewer/set/background 1 1 1
### Federica end

#
#/vis/viewer/set/culling global false
#/vis/viewer/set/culling invisible false
#/vis/viewer/set/style surface
#/vis/viewer/set/viewpointThetaPhi 0 90
#
# scene creation
#/vis/scene/create my_scene
#/vis/scene/list
#/vis/drawVolume
#/vis/viewer/flush
#
# tracks and hits visualisation
#/vis/scene/add/trajectories
#/vis/scene/add/hits
#
# required to display tracks
#/tracking/storeTrajectory 1
#
#
#---------------------------------------------------------------
#   generate events
#---------------------------------------------------------------
#
#
/run/beamOn 5
#
#
